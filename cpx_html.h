#pragma once
#include "cpx.h"

// Helpers for defining tags which have styles
#define STYLEDTAG(CLASSNAME) struct CLASSNAME : public CPXStyledElem
#define STYLEDTAGNAME(CLASSNAME, TAGNAME) CLASSNAME():CPXStyledElem(TAGNAME) {} typedef CLASSNAME THISCLASS

// HTML colors
enum HTMLColor 
{
  BLACK=0x000000,
  NAVY=0x000080,
  DARKBLUE=0x00008B,
  MEDIUMBLUE=0x0000CD,
  BLUE=0x0000FF,
  DARKGREEN=0x006400,
  GREEN=0x008000,
  TEAL=0x008080,
  DARKCYAN=0x008B8B,
  DEEPSKYBLUE=0x00BFFF,
  DARKTURQUOISE=0x00CED1,
  MEDIUMSPRINGGREEN=0x00FA9A,
  LIME=0x00FF00,
  SPRINGGREEN=0x00FF7F,
  AQUA=0x00FFFF,
  CYAN=0x00FFFF,
  MIDNIGHTBLUE=0x191970,
  DODGERBLUE=0x1E90FF,
  LIGHTSEAGREEN=0x20B2AA,
  FORESTGREEN=0x228B22,
  SEAGREEN=0x2E8B57,
  DARKSLATEGRAY=0x2F4F4F,
  LIMEGREEN=0x32CD32,
  MEDIUMSEAGREEN=0x3CB371,
  TURQUOISE=0x40E0D0,
  ROYALBLUE=0x4169E1,
  STEELBLUE=0x4682B4,
  DARKSLATEBLUE=0x483D8B,
  MEDIUMTURQUOISE=0x48D1CC,
  INDIGO=0x4B0082,
  DARKOLIVEGREEN=0x556B2F,
  CADETBLUE=0x5F9EA0,
  CORNFLOWERBLUE=0x6495ED,
  REBECCAPURPLE=0x663399,
  MEDIUMAQUAMARINE=0x66CDAA,
  DIMGRAY=0x696969,
  SLATEBLUE=0x6A5ACD,
  OLIVEDRAB=0x6B8E23,
  SLATEGRAY=0x708090,
  LIGHTSLATEGRAY=0x778899,
  MEDIUMSLATEBLUE=0x7B68EE,
  LAWNGREEN=0x7CFC00,
  CHARTREUSE=0x7FFF00,
  AQUAMARINE=0x7FFFD4,
  MAROON=0x800000,
  PURPLE=0x800080,
  OLIVE=0x808000,
  GRAY=0x808080,
  SKYBLUE=0x87CEEB,
  LIGHTSKYBLUE=0x87CEFA,
  BLUEVIOLET=0x8A2BE2,
  DARKRED=0x8B0000,
  DARKMAGENTA=0x8B008B,
  SADDLEBROWN=0x8B4513,
  DARKSEAGREEN=0x8FBC8B,
  LIGHTGREEN=0x90EE90,
  MEDIUMPURPLE=0x9370DB,
  DARKVIOLET=0x9400D3,
  PALEGREEN=0x98FB98,
  DARKORCHID=0x9932CC,
  YELLOWGREEN=0x9ACD32,
  SIENNA=0xA0522D,
  BROWN=0xA52A2A,
  DARKGRAY=0xA9A9A9,
  LIGHTBLUE=0xADD8E6,
  GREENYELLOW=0xADFF2F,
  PALETURQUOISE=0xAFEEEE,
  LIGHTSTEELBLUE=0xB0C4DE,
  POWDERBLUE=0xB0E0E6,
  FIREBRICK=0xB22222,
  DARKGOLDENROD=0xB8860B,
  MEDIUMORCHID=0xBA55D3,
  ROSYBROWN=0xBC8F8F,
  DARKKHAKI=0xBDB76B,
  SILVER=0xC0C0C0,
  MEDIUMVIOLETRED=0xC71585,
  INDIANRED=0xCD5C5C,
  PERU=0xCD853F,
  CHOCOLATE=0xD2691E,
  TAN=0xD2B48C,
  LIGHTGRAY=0xD3D3D3,
  THISTLE=0xD8BFD8,
  ORCHID=0xDA70D6,
  GOLDENROD=0xDAA520,
  PALEVIOLETRED=0xDB7093,
  CRIMSON=0xDC143C,
  GAINSBORO=0xDCDCDC,
  PLUM=0xDDA0DD,
  BURLYWOOD=0xDEB887,
  LIGHTCYAN=0xE0FFFF,
  LAVENDER=0xE6E6FA,
  DARKSALMON=0xE9967A,
  VIOLET=0xEE82EE,
  PALEGOLDENROD=0xEEE8AA,
  LIGHTCORAL=0xF08080,
  KHAKI=0xF0E68C,
  ALICEBLUE=0xF0F8FF,
  HONEYDEW=0xF0FFF0,
  AZURE=0xF0FFFF,
  SANDYBROWN=0xF4A460,
  WHEAT=0xF5DEB3,
  BEIGE=0xF5F5DC,
  WHITESMOKE=0xF5F5F5,
  MINTCREAM=0xF5FFFA,
  GHOSTWHITE=0xF8F8FF,
  SALMON=0xFA8072,
  ANTIQUEWHITE=0xFAEBD7,
  LINEN=0xFAF0E6,
  LIGHTGOLDENRODYELLOW=0xFAFAD2,
  OLDLACE=0xFDF5E6,
  RED=0xFF0000,
  FUCHSIA=0xFF00FF,
  MAGENTA=0xFF00FF,
  DEEPPINK=0xFF1493,
  ORANGERED=0xFF4500,
  TOMATO=0xFF6347,
  HOTPINK=0xFF69B4,
  CORAL=0xFF7F50,
  DARKORANGE=0xFF8C00,
  LIGHTSALMON=0xFFA07A,
  ORANGE=0xFFA500,
  LIGHTPINK=0xFFB6C1,
  PINK=0xFFC0CB,
  GOLD=0xFFD700,
  PEACHPUFF=0xFFDAB9,
  NAVAJOWHITE=0xFFDEAD,
  MOCCASIN=0xFFE4B5,
  BISQUE=0xFFE4C4,
  MISTYROSE=0xFFE4E1,
  BLANCHEDALMOND=0xFFEBCD,
  PAPAYAWHIP=0xFFEFD5,
  LAVENDERBLUSH=0xFFF0F5,
  SEASHELL=0xFFF5EE,
  CORNSILK=0xFFF8DC,
  LEMONCHIFFON=0xFFFACD,
  FLORALWHITE=0xFFFAF0,
  SNOW=0xFFFAFA,
  YELLOW=0xFFFF00,
  LIGHTYELLOW=0xFFFFE0,
  IVORY=0xFFFFF0,
  WHITE=0xFFFFFF,
};

ostream& operator<<(ostream&, const HTMLColor&);

struct CPXStyle
{
  map<string, string> props;

#define MAKE_STYLE_PROP(T, PROPNAME) CPXStyle &PROPNAME(const T &val) { ostringstream oss; oss << val; props[#PROPNAME] = oss.str(); return *this;} 
  MAKE_STYLE_PROP(HTMLColor, color);
  MAKE_STYLE_PROP(int, height);
  MAKE_STYLE_PROP(int, width);
};


// Styled element
 // <DIV (STYLE.height(20) .width(100)) .id("main") > _
struct CPXStyledElem: CPXElem
{
  map<string, string> css;
  
  CPXStyledElem(const char *pszTag): CPXElem(pszTag) {}
  
  // Copy the style props, clear the style (since the may be reused later)
  CPXStyledElem &operator()(CPXStyle &style)
  {
    css.clear();
    css.swap(style.props);
    return *this;
  }
};

CPX &operator<(CPX &cpx, CPXStyledElem &e);

